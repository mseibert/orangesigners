import { b as createAstro, c as createComponent, d as addAttribute, a as renderTemplate, p as defineScriptVars, m as maybeRenderHead, r as renderComponent } from './astro/server_crBGogEi.mjs';
/* empty css                         */
import { _ as __ASTRO_IMAGE_IMPORT_Z1F4X4R } from './blog-placeholder-1_BIGioVHg.mjs';
import { a as SITE_TITLE } from './consts_Dt6daOuA.mjs';
import './index_MaT6fT73.mjs';
import { $ as $$Image } from './_astro_assets_DUILIom-.mjs';
import { $ as $$HeaderLink } from './HeaderLink_B-UCBow7.mjs';

const $$Astro$1 = createAstro("https://orangesingers.de");
const $$BaseHead = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
  Astro2.self = $$BaseHead;
  const canonicalURL = new URL(Astro2.url.pathname, Astro2.site);
  const { title, description = "Orange Singers - Unterstufenchor der Oranienschule Wiesbaden", image = __ASTRO_IMAGE_IMPORT_Z1F4X4R, ogImage } = Astro2.props;
  const ogImageURL = ogImage || new URL(image.src, Astro2.url);
  return renderTemplate`<!-- Global Metadata --><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"><link rel="icon" type="image/svg+xml" href="/favicon.svg"><link rel="sitemap" href="/sitemap-index.xml"><link rel="alternate" type="application/rss+xml"${addAttribute(SITE_TITLE, "title")}${addAttribute(new URL("rss.xml", Astro2.site), "href")}><meta name="generator"${addAttribute(Astro2.generator, "content")}><!-- Canonical URL --><link rel="canonical"${addAttribute(canonicalURL, "href")}><!-- Primary Meta Tags --><title>${title}</title><meta name="title"${addAttribute(title, "content")}><meta name="description"${addAttribute(description, "content")}><!-- Open Graph / Facebook --><meta property="og:type" content="website"><meta property="og:url"${addAttribute(Astro2.url, "content")}><meta property="og:title"${addAttribute(title, "content")}><meta property="og:description"${addAttribute(description, "content")}><meta property="og:image"${addAttribute(ogImageURL, "content")}><meta property="og:image:width" content="1200"><meta property="og:image:height" content="630"><!-- Twitter --><meta property="twitter:card" content="summary_large_image"><meta property="twitter:url"${addAttribute(Astro2.url, "content")}><meta property="twitter:title"${addAttribute(title, "content")}><meta property="twitter:description"${addAttribute(description, "content")}><meta property="twitter:image"${addAttribute(ogImageURL, "content")}><!-- Google Fonts - Lato --><link rel="preconnect" href="https://fonts.googleapis.com"><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin><link href="https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700&display=swap" rel="stylesheet">`;
}, "/Users/martinseibert/Documents/code/orangesingers/src/components/BaseHead.astro", void 0);

var __freeze$1 = Object.freeze;
var __defProp$1 = Object.defineProperty;
var __template$1 = (cooked, raw) => __freeze$1(__defProp$1(cooked, "raw", { value: __freeze$1(cooked.slice()) }));
var _a$1;
const $$Astro = createAstro("https://orangesingers.de");
const $$ContactForm = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$ContactForm;
  const {
    fromMailAddress = "musik@oranienschule.de",
    replyToAddress = "musik@oranienschule.de",
    formMailSubject = "Kontaktformular von Orange Singers Website",
    emailBodyText = "Dieses Formular wurde hier ausgef\xFCllt: {ReferrerURL}\n\nVon: {SubmitterMailAddress}\nNachricht: {Message}",
    customerEmailBodyText = "Jemand hat ein Kontaktformular auf der Orange Singers Website hier ausgef\xFCllt: {ReferrerURL}\n\nE-Mail-Adresse: {SubmitterMailAddress}\nNachricht: {Message}\n\nDies ist eine automatische Nachricht von der Orange Singers Website. Falls du das Formular nicht ausgef\xFCllt hast, kannst du diese E-Mail ignorieren. Bei Fragen kontaktiere uns bitte unter musik@oranienschule.de."
  } = Astro2.props;
  return renderTemplate(_a$1 || (_a$1 = __template$1(["", `<div class="bg-white rounded-lg shadow-lg p-6 border-2" style="border-color: #f08300;" data-astro-cid-svshx33u> <h3 class="font-bold text-xl mb-4 border-b-2 pb-2" style="color: #f08300; border-color: #f08300;" data-astro-cid-svshx33u>
Schreib uns eine Nachricht
</h3> <form id="contactForm" class="space-y-4" data-astro-cid-svshx33u> <div data-astro-cid-svshx33u> <label for="email" class="block text-sm font-medium text-gray-700 mb-1" data-astro-cid-svshx33u>
Deine E-Mail-Adresse *
</label> <input type="email" id="email" name="email" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:border-transparent" style="focus:ring-color: #f08300;" placeholder="deine.email@beispiel.de" data-astro-cid-svshx33u> </div> <div data-astro-cid-svshx33u> <label for="message" class="block text-sm font-medium text-gray-700 mb-1" data-astro-cid-svshx33u>
Deine Nachricht *
</label> <textarea id="message" name="message" required rows="4" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:border-transparent resize-vertical" style="focus:ring-color: #f08300;" placeholder="Schreib uns, was du uns mitteilen m\xF6chtest..." data-astro-cid-svshx33u></textarea> </div> <button type="submit" id="submitBtn" class="w-full py-3 px-6 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors duration-300 font-medium text-lg shadow-md" style="background-color: #f08300; color: white;" onmouseover="this.style.backgroundColor='#e07400'" onmouseout="this.style.backgroundColor='#f08300'" data-astro-cid-svshx33u>
Nachricht senden
</button> </form> <div id="formMessage" class="mt-4 hidden" data-astro-cid-svshx33u> <div id="successMessage" class="hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded" data-astro-cid-svshx33u> <p id="successText" data-astro-cid-svshx33u></p> </div> <div id="errorMessage" class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded" data-astro-cid-svshx33u> <p id="errorText" data-astro-cid-svshx33u></p> </div> </div> </div>  <script>(function(){`, "\n  document.addEventListener('DOMContentLoaded', function() {\n    const form = document.getElementById('contactForm');\n    const submitBtn = document.getElementById('submitBtn');\n    const formMessage = document.getElementById('formMessage');\n    const successMessage = document.getElementById('successMessage');\n    const errorMessage = document.getElementById('errorMessage');\n    const successText = document.getElementById('successText');\n    const errorText = document.getElementById('errorText');\n\n    function showMessage(message, isSuccess) {\n      formMessage.classList.remove('hidden');\n      successMessage.classList.add('hidden');\n      errorMessage.classList.add('hidden');\n      \n      if (isSuccess) {\n        successText.textContent = message;\n        successMessage.classList.remove('hidden');\n      } else {\n        errorText.textContent = message;\n        errorMessage.classList.remove('hidden');\n      }\n    }\n\n    function hideMessage() {\n      formMessage.classList.add('hidden');\n    }\n\n    form.addEventListener('submit', async function(e) {\n      e.preventDefault();\n      \n      const formData = new FormData(form);\n      const email = formData.get('email');\n      const message = formData.get('message');\n      \n      // Referrer URL ermitteln\n      const referrerURL = document.referrer || window.location.href;\n      \n      // Button deaktivieren und Text \xE4ndern\n      submitBtn.disabled = true;\n      submitBtn.textContent = 'Wird gesendet...';\n      \n      try {\n        const response = await fetch('/api/contact', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ \n            email, \n            message, \n            referrerURL,\n            fromMailAddress,\n            replyToAddress,\n            formMailSubject,\n            emailBodyText,\n            customerEmailBodyText\n          })\n        });\n        \n        const result = await response.json();\n        \n        if (result.success) {\n          showMessage(result.message, true);\n          form.reset();\n        } else {\n          showMessage(result.message, false);\n        }\n      } catch (error) {\n        showMessage('Es gab einen Fehler beim Senden deiner Nachricht. Bitte versuche es sp\xE4ter erneut.', false);\n      } finally {\n        // Button wieder aktivieren\n        submitBtn.disabled = false;\n        submitBtn.textContent = 'Nachricht senden';\n      }\n    });\n\n    // Nachricht ausblenden, wenn Benutzer erneut tippt\n    const inputs = form.querySelectorAll('input, textarea');\n    inputs.forEach(input => {\n      input.addEventListener('input', hideMessage);\n    });\n  });\n})();<\/script>"])), maybeRenderHead(), defineScriptVars({ fromMailAddress, replyToAddress, formMailSubject, emailBodyText, customerEmailBodyText }));
}, "/Users/martinseibert/Documents/code/orangesingers/src/components/ContactForm.astro", void 0);

const $$Footer = createComponent(($$result, $$props, $$slots) => {
  const today = /* @__PURE__ */ new Date();
  return renderTemplate`${maybeRenderHead()}<footer class="bg-gray-50 text-gray-700 mt-16 border-t-2 border-oranienschule-500"> <div class="max-w-7xl mx-auto px-4 py-12"> <div class="grid grid-cols-1 md:grid-cols-4 gap-8 mb-8"> <div> <h3 class="text-oranienschule-500 font-bold text-xl mb-4 border-b-2 border-oranienschule-500 pb-2">Orange Singers</h3> <p class="text-gray-600 mb-2">Unterstufenchor der Oranienschule Wiesbaden</p> <p class="text-gray-600">Leitung: Juliane Seibert</p> </div> <div> <h3 class="text-oranienschule-500 font-bold text-xl mb-4 border-b-2 border-oranienschule-500 pb-2">Kontakt</h3> <p class="text-gray-600 mb-2">Oranienschule Wiesbaden</p> <p class="text-gray-600 mb-2">Oranienstraße 1</p> <p class="text-gray-600">65185 Wiesbaden</p> </div> <div> <h3 class="text-oranienschule-500 font-bold text-xl mb-4 border-b-2 border-oranienschule-500 pb-2">Links</h3> <ul class="space-y-2"> <li><a href="https://www.oranienschule.de" target="_blank" class="text-gray-600 hover:text-oranienschule-500 transition-colors duration-300">Oranienschule Wiesbaden</a></li> <li><a href="/about" class="text-gray-600 hover:text-oranienschule-500 transition-colors duration-300">Über uns</a></li> <li><a href="/blog" class="text-gray-600 hover:text-oranienschule-500 transition-colors duration-300">Blog</a></li> </ul> </div> <div class="md:col-span-1"> ${renderComponent($$result, "ContactForm", $$ContactForm, { "fromMailAddress": "musik@oranienschule.de", "replyToAddress": "musik@oranienschule.de", "formMailSubject": "Kontaktformular von Orange Singers Website", "emailBodyText": "This form was submitted at: {ReferrerURL}\n\nFrom: {SubmitterMailAddress}\nMessage: {Message}", "customerEmailBodyText": "Jemand hat ein Kontaktformular auf der Orange Singers Website hier ausgef\xFCllt: {ReferrerURL}\n\nE-Mail-Adresse: {SubmitterMailAddress}\nNachricht: {Message}\n\nDies ist eine automatische Nachricht von der Orange Singers Website. Falls du das Formular nicht ausgef\xFCllt hast, kannst du diese E-Mail ignorieren. Bei Fragen kontaktiere uns bitte unter musik@oranienschule.de." })} </div> </div> <div class="border-t border-gray-300 pt-4 text-center text-gray-500 text-sm"> <p>&copy; ${today.getFullYear()} Orange Singers - Oranienschule Wiesbaden. Alle Rechte vorbehalten.</p> </div> </div> </footer>`;
}, "/Users/martinseibert/Documents/code/orangesingers/src/components/Footer.astro", void 0);

const logoImage = new Proxy({"src":"/_astro/orangesingers.DTKpyjQ_.png","width":1032,"height":1000,"format":"png"}, {
						get(target, name, receiver) {
							if (name === 'clone') {
								return structuredClone(target);
							}
							if (name === 'fsPath') {
								return "/Users/martinseibert/Documents/code/orangesingers/src/assets/images/orangesingers.png";
							}
							
							return target[name];
						}
					});

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(cooked.slice()) }));
var _a;
const $$Header = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate(_a || (_a = __template(["", '<header class="bg-white border-b-2 border-oranienschule-500 shadow-sm"> <nav class="max-w-7xl mx-auto px-4"> <div class="flex justify-between items-center py-4"> <div class="flex items-center"> <a href="/" class="flex items-center"> ', ' </a> </div> <!-- Desktop Navigation --> <div class="hidden md:flex items-center space-x-8"> ', " ", " ", ' </div> <!-- Mobile Hamburger Button --> <button id="mobile-menu-button" class="md:hidden flex flex-col justify-center items-center w-8 h-8 space-y-1.5 focus:outline-none" aria-label="Men\xFC \xF6ffnen"> <span class="block w-6 h-0.5 bg-gray-700 transition-all duration-300 transform" id="hamburger-line-1"></span> <span class="block w-6 h-0.5 bg-gray-700 transition-all duration-300 transform" id="hamburger-line-2"></span> <span class="block w-6 h-0.5 bg-gray-700 transition-all duration-300 transform" id="hamburger-line-3"></span> </button> </div> <!-- Mobile Navigation Menu --> <div id="mobile-menu" class="md:hidden hidden bg-white border-t border-gray-200 transition-all duration-300 ease-in-out"> <div class="px-2 pt-2 pb-3 space-y-1"> ', " ", " ", " </div> </div> </nav> </header> <script>\n	// Mobile menu functionality\n	document.addEventListener('DOMContentLoaded', function() {\n		const mobileMenuButton = document.getElementById('mobile-menu-button');\n		const mobileMenu = document.getElementById('mobile-menu');\n		const hamburgerLines = [\n			document.getElementById('hamburger-line-1'),\n			document.getElementById('hamburger-line-2'),\n			document.getElementById('hamburger-line-3')\n		];\n\n		// Check if all elements exist\n		if (!mobileMenuButton || !mobileMenu || !hamburgerLines[0] || !hamburgerLines[1] || !hamburgerLines[2]) {\n			console.error('Mobile menu elements not found');\n			return;\n		}\n\n		let isMenuOpen = false;\n\n		function toggleMenu() {\n			isMenuOpen = !isMenuOpen;\n			\n			if (isMenuOpen) {\n				// Open menu\n				mobileMenu.classList.remove('hidden');\n				mobileMenuButton.setAttribute('aria-label', 'Men\xFC schlie\xDFen');\n				\n				// Animate hamburger to X\n				hamburgerLines[0].style.transform = 'rotate(45deg) translate(5px, 5px)';\n				hamburgerLines[1].style.opacity = '0';\n				hamburgerLines[2].style.transform = 'rotate(-45deg) translate(7px, -6px)';\n			} else {\n				// Close menu\n				mobileMenu.classList.add('hidden');\n				mobileMenuButton.setAttribute('aria-label', 'Men\xFC \xF6ffnen');\n				\n				// Reset hamburger animation\n				hamburgerLines[0].style.transform = 'none';\n				hamburgerLines[1].style.opacity = '1';\n				hamburgerLines[2].style.transform = 'none';\n			}\n		}\n\n		// Event listeners\n		mobileMenuButton.addEventListener('click', toggleMenu);\n\n		// Close menu when clicking on a link\n		const mobileMenuLinks = mobileMenu.querySelectorAll('a');\n		mobileMenuLinks.forEach(link => {\n			link.addEventListener('click', () => {\n				if (isMenuOpen) {\n					toggleMenu();\n				}\n			});\n		});\n\n		// Close menu when clicking outside\n		document.addEventListener('click', (event) => {\n			const target = event.target;\n			if (isMenuOpen && !mobileMenuButton.contains(target) && !mobileMenu.contains(target)) {\n				toggleMenu();\n			}\n		});\n\n		// Close menu on window resize if switching to desktop\n		window.addEventListener('resize', () => {\n			if (window.innerWidth >= 768 && isMenuOpen) {\n				toggleMenu();\n			}\n		});\n	});\n<\/script>"])), maybeRenderHead(), renderComponent($$result, "Image", $$Image, { "src": logoImage, "alt": SITE_TITLE, "width": 120, "height": 120, "class": "h-16 w-auto" }), renderComponent($$result, "HeaderLink", $$HeaderLink, { "href": "/", "class": "text-gray-700 hover:text-oranienschule-500 font-medium transition-colors duration-300" }, { "default": ($$result2) => renderTemplate`Startseite` }), renderComponent($$result, "HeaderLink", $$HeaderLink, { "href": "/blog", "class": "text-gray-700 hover:text-oranienschule-500 font-medium transition-colors duration-300" }, { "default": ($$result2) => renderTemplate`Blog` }), renderComponent($$result, "HeaderLink", $$HeaderLink, { "href": "/about", "class": "text-gray-700 hover:text-oranienschule-500 font-medium transition-colors duration-300" }, { "default": ($$result2) => renderTemplate`Über uns` }), renderComponent($$result, "HeaderLink", $$HeaderLink, { "href": "/", "class": "block px-3 py-2 text-gray-700 hover:text-oranienschule-500 hover:bg-gray-50 rounded-md font-medium transition-colors duration-300" }, { "default": ($$result2) => renderTemplate`
Startseite
` }), renderComponent($$result, "HeaderLink", $$HeaderLink, { "href": "/blog", "class": "block px-3 py-2 text-gray-700 hover:text-oranienschule-500 hover:bg-gray-50 rounded-md font-medium transition-colors duration-300" }, { "default": ($$result2) => renderTemplate`
Blog
` }), renderComponent($$result, "HeaderLink", $$HeaderLink, { "href": "/about", "class": "block px-3 py-2 text-gray-700 hover:text-oranienschule-500 hover:bg-gray-50 rounded-md font-medium transition-colors duration-300" }, { "default": ($$result2) => renderTemplate`
Über uns
` }));
}, "/Users/martinseibert/Documents/code/orangesingers/src/components/Header.astro", void 0);

export { $$BaseHead as $, $$Header as a, $$Footer as b };
